language: python
python:
  - "3.5"
  - "3.6"
  - "3.7"
  - "3.8"

env:
  global:
    - HYDRA_LAUNCHER=fork
    - OMPI_MCA_rmaps_base_oversubscribe=yes
    - MPI=mpich
    - CCTOOLS_VERSION=7.0.11

before_install:
    - sudo apt-get update -q
    - python$PY -m pip install Cython
    - python$PY -m pip install numpy
    - python$PY --version
    - python$PY -m cython --version
    - python$PY -c "import numpy;print(numpy.__version__)"


# install parsl with no optional extras
install:
    - make deps

# Os tests
os:
    - linux

# command to run tests
script:
    - make flake8
    - make lint

    # This uses all of the configurations and tests as the base from which to
    # run mypy checks - these are likely to capture most of the code used in
    # parsl
    - make mypy

      # do this before any testing, but not in-between tests
    - make clean_coverage

    # run the make targets for the two supported targets.
    - make test

    # check that documentation stubs are up to date, as they are compiled from
    # python code but stored in version control rather than generated as part
    # of doc build. prereqs for this will have been installed because of above
    # pip install .[all] step
    - cd docs
    - rm -rfv stubs
    - sphinx-autogen reference.rst userguide/*rst devguide/*rst
    # this will both display any diffs in log output, and fail if there is any diff
    - git diff --exit-code
    - cd ..

    # assert that none of the runs in this test have put an ERROR message into a
    # database manager log file or monitoring hub log file. It would be better if
    # the tests themselves failed immediately when there was a monitoring error, but
    # in the absence of that, this is a dirty way to check.
    - bash -c '! grep ERROR runinfo*/*/database_manager.log'
    - bash -c '! grep ERROR runinfo*/*/hub.log'

    # check that 'all' install target works, even though we aren't doing any further
    # testing of what is installed
    - pip install .[all]

    # run simple worker test. this is unlikely to scale due to
    # a stdout/stderr buffering bug in present master.
    # - coverage run --append --source=parsl parsl/tests/manual_tests/test_worker_count.py -c 1000
    # TODO: ^ this test has been removed pending investigation ... when restored or removed,
    #       sort out this commented out block appropriately.

    # prints report of coverage data stored in .coverage
    - make coverage
